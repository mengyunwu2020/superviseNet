% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/superviseNetpath.R
\name{superviseNetpath}
\alias{superviseNetpath}
\title{Supervised heterogeneous network estimation via survival-based Bayesian graphical models (superviseNet) along path.}
\usage{
superviseNetpath(
  ct,
  xx,
  Kseq,
  lambda_mu = 0,
  v1 = 1,
  v0,
  lambda_beta,
  lambda_sim,
  tau_0 = 0.01,
  p2,
  l.m,
  member_input,
  eps = 0.01,
  maxiter = 50,
  threshold = 0.001,
  eps_z = 1e-05,
  l.update = TRUE,
  tau1 = 0.001
)
}
\arguments{
\item{ct}{A two-column matrix with the first column being the survival time and the second column being the censoring indicator. The indicator is a binary variable, with "1" indicating dead, and "0" indicating right censored.}

\item{xx}{Input matrix of p genetic measurements consisting of n rows. Each row is an observation vector.}

\item{Kseq}{A user supplied vector of number of subgroups.}

\item{lambda_mu}{A user supplied non-negative tuning parameters of laplace prior on subgroup mean parameters.}

\item{v1}{A user supplied slab prior parameters.}

\item{v0}{A user supplied spike prior parameters.}

\item{lambda_beta}{A user supplied non-negative tuning parameters of laplace prior on subgroup regression parameters.}

\item{lambda_sim}{A user supplied non-negative tuning parameters controlling the similarity across different networks.}

\item{tau_0}{A user supplied non-negative tuning parameter of exponential prior on diagonal elements of precision matrices.}

\item{p2}{A user supplied probability parameters of Bernoulli prior on binary latent indicator $\gamma_{k,jl}$.}

\item{l.m}{A vector composed of similarity-based matrix.}

\item{member_input}{A vector indicating initialized subgroup memberships of each subjects.}

\item{eps}{Tolerance for the EM algorithm.}

\item{maxiter}{Maximum of number of iterations.}

\item{threshold}{A small constant that thresholds the final precision matrix estimator.}

\item{eps_z}{A small regularized constant used in the risk ratio computation.}

\item{l.update}{Whether update the similarity matrix.}

\item{tau1}{A small constant used in the computation of similarity matrix.}
}
\value{
A list
}
\description{
Supervised heterogeneous network estimation via survival-based Bayesian graphical models (superviseNet) along path.
}
\examples{
n <- 150              # The sample size of each subgroup
p <- 100             # The dimension of the precision matrix
K <- 3
set.seed(1)
mu01 = mu02 = mu03 = rep(0,p)
beta=matrix(0,K,p)
beta[1,1:5]=2
beta[2,1:5]=-2
beta[3,3:7]=1
beta0=c(0,0,0)
sigma=c(.01,.01,0.01)
rate=.8
Mu0.list <- list(mu01,mu02,mu03)
whole.data <- generate.data(n,Mu0.list,beta,beta0,sigma)
whole.data$beta0=beta
xx=whole.data$data
ct=whole.data$ct
set.seed(1)
class_old<-sample(1:K,nrow(xx),replace=TRUE)
Thetab <- array(0, dim = c(p, p, K))
for(k in 1:K)
{
Thetab[,,k] <- diag(1,p,p)
}
tau1=0.001
l.m=NULL
for(i in 1:(p-1)){
for(j in (i+1):p){
tmm=1/sqrt(Thetab[i,j,]^2+tau1^2)
tmp.m=-matrix(tmm,ncol=1)\%*\%matrix(tmm,nrow=1)
diag(tmp.m)=(K-1)*(tmm^2)
tmp=tmp.m
l.m=c(l.m,c(tmp))
}
}
res=superviseNetpath(ct,xx,K,lambda_mu=sqrt(dim(ct)[1]*log(p))/2,lambda_beta=sqrt(dim(ct)[1]*log(p))/2,tau_0=0.01,v0=seq(0.057,.06,length.out=2),v1=1,p2=0.85,lambda_sim=c(0.1,0.05,0.01),l.m=l.m,member_input=class_old,eps=1e-2,maxiter=50,threshold=1e-3,eps_z=1e-5)
}
